#!/bin/sh

DEBUG=0
SCRIPT=$(readlink -f "$0")
SCRIPTPATH=$(dirname "$SCRIPT")
LOGPATH=/dev/null
SCRIPT_ARGS=$@

export LD_LIBRARY_PATH="/data_persist/dev/lib:${SCRIPTPATH}/headunit_libs:/jci/lib:/jci/opera/3rdpartylibs/freetype:/usr/lib/imx-mm/audio-codec:/usr/lib/imx-mm/video-codec:/usr/lib/imx-mm/parser:"
#override some GST plugins with these
export GST_PLUGIN_PATH="${SCRIPTPATH}/headunit_libs:/usr/lib/gstreamer-0.10:"

if [ $DEBUG -ne 0 ]; then
  LOGPATH=/data/headunit.log
  if [ -e $LOGPATH ]; then
    LOGSIZE=$(stat -c%s "$LOGPATH")
    if [ $LOGSIZE -gt 10000000 ]; then
      # Delete log file if size exceeds 10 MB
      echo "Delete Log"
      rm -f $LOGPATH
    fi
  fi
fi

# Testing this:
# sysctl -a | grep "mem" 2>&1 >> ${LOGPATH}
# echo "****************************" >> ${LOGPATH}

echo 41943040 > /proc/sys/net/core/rmem_max
echo 41943040 > /proc/sys/net/core/wmem_max
echo 17825792 > /proc/sys/net/core/rmem_default
echo 17825792 > /proc/sys/net/core/wmem_default
echo 4096 17825792 41943040 > /proc/sys/net/ipv4/tcp_rmem
echo 4096 17825792 41943040 > /proc/sys/net/ipv4/tcp_wmem
# echo 4096 17825792 41943040 > /proc/sys/net/ipv4/tcp_mem

# echo "sysctl -a | grep mem" >> ${LOGPATH}
# sysctl -a | grep "mem" >> ${LOGPATH} 2>&1
echo "****************************" >> ${LOGPATH}
hwclock --hctosys
echo "START HEADUNIT LOG - $(date +'%D %T')" >> ${LOGPATH}

if ! [ -e /tmp/root/headunit.json ]; then
 cp "${SCRIPTPATH}/headunit.json" /tmp/root/
fi

start_headunit()
{
   rm -f /tmp/root/headunit-wireless.status
   sed -i 's."wifiTransport": true."wifiTransport": false.g' /tmp/root/headunit.json
   sync; echo 3 > /proc/sys/vm/drop_caches
   taskset 0xFFFFFFFF ionice -c 1 -n 0 nice -n -20 "${SCRIPTPATH}/headunit" "$@" >> ${LOGPATH} 2>&1 &
   sleep 2
   echo "Start Headunit (USB Mode)"
   touch /tmp/root/headunit.status
}

start_AAwireless()
{
    rm -f /tmp/root/headunit.status
    sed -i 's."wifiTransport": false."wifiTransport": true.g' /tmp/root/headunit.json
    sync; echo 3 > /proc/sys/vm/drop_caches
    taskset 0xFFFFFFFF ionice -c 1 -n 0 nice -n -20 "${SCRIPTPATH}/headunit" "$@" >> ${LOGPATH} 2>&1 &
    sleep 2
    echo "Start Headunit (WiFi Mode)"
    touch /tmp/root/headunit-wireless.status
}

rm -f /tmp/root/headunit.status /tmp/root/headunit-wireless.status

# prevent conflict by Official AA
killall -q -9 aap_service carplayd L_jciCARPLAY L_jciAAPA

#default USB
start_headunit

# loop forever. every 5-10 seconds,
while true
do
 NET_CHECK=`netstat -rn|awk '$2=="192.168.43.1" {print}'|wc -l|awk '{print $1}'`

 if [ -e /tmp/root/usb_connect ]; then
  USBCHECK=1
 else
  USBCHECK=0
 fi

 if [ $NET_CHECK == 1 ] && [ $USBCHECK == 0 ]; then
    if [ -e /tmp/root/headunit.status ]; then
        killall -q headunit
    fi

    if ! [ -e /tmp/root/headunit-wireless.status ]; then
        start_AAwireless
    fi

 else
    check_headunit=`ps|grep 'bin/headunit'|grep -v wrapper|grep -v grep|wc -l|awk '{print $1}'`

    [ $check_headunit -eq 0 ] && rm -f /tmp/root/headunit-wireless.status /tmp/root/headunit.status

    if [ -e /tmp/root/headunit-wireless.status ]; then
        killall -q headunit
    fi
    if ! [ -e /tmp/root/headunit.status ]; then
        start_headunit
    fi
 fi

 RAND=`expr $RANDOM % 5 + 5`
 #echo "go sleep $RAND"
 sleep $RAND

done
